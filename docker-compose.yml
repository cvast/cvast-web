version: '2'
services:

    web:
      restart: always
      image: cvast-build.eastus.cloudapp.azure.com:5000/cvast-web:$BUILD_NUMBER
      build: 
        context: .
        dockerfile: ./Dockerfile-web
      command: bash -c  "/install/web_entrypoint.sh"
      volumes:
      - web-uploaded-files:/cvast_web/cvast_arches/cvast_arches/uploadedfiles/files
      - web-log:/cvast_web/cvast_arches/cvast_arches/logs
      # - web-app:/cvast_web
      # - web-media-root:/cvast_web/cvast_arches/cvast_arches/media
      environment:
        - PG_PASSWORD=TestCVAST
        - PG_HOST=db
        - PG_PORT=5432
        - ES_HOST=elasticsearch
        - DJANGO_PASSWORD=TestAdminCVAST
        - DJANGO_MODE=DEV
        - DJANGO_DEBUG=True
        - IS_CLEAN_ENV=False
      ports:
        - '8000:8000'
        - '8001:8001'
      depends_on:
        - db
        - elasticsearch
        
    db:
      restart: always
      image: cvast-build.eastus.cloudapp.azure.com:5000/cvast-db:$BUILD_NUMBER
      build: 
        context: .
        dockerfile: ./Dockerfile-db
      volumes:
          - postgres-data:/postgres-data
          - postgres-log:/var/log/postgresql
          - postgres-config:/postgres-config
      ports:
        - '5432:5432'
      environment:
        - PG_PASSWORD=TestCVAST
        - IS_CLEAN_ENV=False
        
    elasticsearch:
      restart: always
      image: cvast-build.eastus.cloudapp.azure.com:5000/cvast-elasticsearch:$BUILD_NUMBER
      build: 
        context: .
        dockerfile: ./Dockerfile-elasticsearch
      volumes:
        - elasticsearch-data:/elasticsearch-data
        - elasticsearch-log:/elasticsearch-log
        - elasticsearch-config:/elasticsearch-config
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        - IS_CLEAN_ENV=False
        
    nginx:
      restart: always
      image: cvast-build.eastus.cloudapp.azure.com:5000/cvast-nginx:$BUILD_NUMBER
      build: 
        context: .
        dockerfile: ./Dockerfile-nginx
      ports:
        - '80:80'
      volumes:
        - /www/static
      depends_on:
        - web
        
volumes:
    web-uploaded-files:
    web-log:
    # web-app:
    # web-media-root:
    postgres-data:
    postgres-log:
    postgres-config:
    elasticsearch-data:
    elasticsearch-log:
    elasticsearch-config: