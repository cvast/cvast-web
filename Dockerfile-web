# our base image, for now, Ubuntu
FROM ubuntu:14.04
USER root
# Replace default command interpreter from sh to bash (needed for 'source' command)
RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Install dependencies
RUN apt-get update -y 
RUN apt-get install -y wget
RUN apt-get install -y build-essential
RUN apt-get install -y libxml2-dev
RUN apt-get install -y libjson0-dev
RUN apt-get install -y libproj-dev
RUN apt-get install -y xsltproc docbook-xsl
RUN apt-get install -y docbook-mathml
RUN apt-get install -y libgdal1-dev
RUN apt-get install -y openjdk-7-jdk
RUN apt-get install -y python-setuptools
RUN apt-get install -y python-dev
RUN apt-get install -y libffi-dev
RUN apt-get install -y libpq-dev

# Needed for postgres-9.4
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main" >> /etc/apt/sources.list.d/pgdg.list
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \
  sudo apt-key add -
RUN apt-get update -y

RUN apt-get install -y postgresql-server-dev-9.4
RUN apt-get install -y postgresql-client-9.4
RUN echo "*:*:*:postgres:postgis" >> ~/.pgpass
RUN chmod 600 ~/.pgpass

RUN	easy_install pip

	#See if we can do without these
# RUN pip install pyopenssl 
# RUN pip install ndg-httpsclient 
# RUN pip install pyasn1 
# RUN pip install requests 
# RUN pip install psycopg2 
# RUN pip install django_nose


# Install Geos	
WORKDIR /tmp	
RUN	wget http://download.osgeo.org/geos/geos-3.4.2.tar.bz2
RUN	tar xvfj geos-3.4.2.tar.bz2
WORKDIR	/tmp/geos-3.4.2
RUN	./configure
RUN	make
RUN	make install
	
	
# Install Postgis
WORKDIR /tmp
RUN wget http://download.osgeo.org/postgis/source/postgis-2.1.3.tar.gz
RUN tar xfvz postgis-2.1.3.tar.gz
WORKDIR /tmp/postgis-2.1.3
RUN ./configure
RUN make
RUN make install
RUN ldconfig
RUN make comments-install
RUN ln -sf /usr/share/postgresql-common/pg_wrapper /usr/local/bin/shp2pgsql
RUN ln -sf /usr/share/postgresql-common/pg_wrapper /usr/local/bin/pgsql2shp
RUN ln -sf /usr/share/postgresql-common/pg_wrapper /usr/local/bin/raster2pgsql
	
	
# Install the Arches application	
COPY arches /arches
WORKDIR	/arches
RUN	pip install -e .
RUN python setup.py build
RUN python setup.py install


# Cleanup
# USER root
RUN rm -rf /tmp/*

EXPOSE 8000
CMD ["/arches/manage.py runserver 0.0.0.0:8000"]
